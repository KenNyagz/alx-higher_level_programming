#Testing the class BasicGeometry

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bg = BaseGeometry()

>>> type(bg)
<class '7-base_geometry.BaseGeometry'>


1.Testcase: Normal use
>>> bg.integer_validator("width", 4)


2.Testcase: BasicGeometry passed 'None'
>>> bg.integer_validator(None)
Traceback (most recent call last):
 ...
TypeError: integer_validator() missing 1 required positional argument: 'value'


3.Testcase: Basicgeometry passed a str
>>> bg.integer_validator("five", 5)



4.Testcase: No args
>>> bg.integer_validator()
Traceback (most recent call last):
  ...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'


5.Testcase: None passed as second arument in .integer_validator
>>> bg.integer_validator(5, None)
Traceback (most recent call last):
  ...
TypeError: 5 must be an integer


6.Testcase: Test .area method
>>> bg.area()
Traceback (most recent call last):
  ...
Exception: area() is not implemented
