#Test matrix_divided from 2-matrix_divided.py

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Normal case of matrix divided by int
>>> matrix_divided([[6, 4], [8, 6]], 2)
[[3.0, 2.0], [4.0, 3.0]]

Testing zero division
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
  ...
ZeroDivisionError: division by zero

Testing edge case where only list have been given
>>> matrix_divided([1], [2])
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats


Testing inconsistent row length where one is a single element
>>> matrix_divided([[1, 2], [3]], 2)
Traceback (most recent call last):
  ...
TypeError: Each row of the matrix must have the same size


Testing where div is not provided
>>> print(matrix_divided([[1, 2, 3], [4, 5, 6]]))
Traceback (most recent call last):
  ...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

Testing case when div is None
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], None)
Traceback (most recent call last):
  ...
TypeError: div must be a number

Testing inconsistent row lengths
>>> matrix_divided([[10, 20], [35,37,48]], 10)
Traceback (most recent call last):
  ...
TypeError: Each row of the matrix must have the same size

Testing with floating point numbers
>>> matrix_divided([[2, 3], [4, 5]], 6.9)
[[0.29, 0.43], [0.58, 0.72]]

Testing with negative numbers
>>> matrix_divided([[4, 5, 7], [1, 8, 3]], -2)
[[-2.0, -2.5, -3.5], [-0.5, -4.0, -1.5]]


Testing empty matrix
>>> matrix_divided([[]], -2)
[[]]


Testing edge case of Matrix param being None
>>> matrix_divided(None, -2)
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats


Tesing a non-int/float arg as div
>>> matrix_divided([[1, 2], [3, 4]], "I")
Traceback (most recent call last):
  ...
TypeError: div must be a number

Testing a Non-matrix as arg
>>> matrix_divided("Me Me", 2)
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Testing: More than 2 arguments passed
>>> matrix_divided([[12, 23], [2, 5]], [2, 3], 2)
Traceback (most recent call last):
  ...
TypeError: matrix_divided() takes 2 positional arguments but 3 were given
