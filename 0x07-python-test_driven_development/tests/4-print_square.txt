#Testing function print_square

>>> print_square = __import__('4-print_square').print_square

1. Test case: Normal use case - pass postive int to func
>>> print_square(2)
##
##

2.Test case: Pass negative int to func
>>> print_square(-2)
Traceback (most recent call last):
  ...
ValueError: size must be >= 0


3. Test case: Pass float to func
>>> print_square(3.1)
Traceback (most recent call last):
  ...
TypeError: size must be an integer


4. Test case: Pass 0 to func
>>> print_square(0)


5. Test case: Pass negative float to func
>>> print_square(-4.8)
Traceback (most recent call last):
 ...
TypeError: size must be an integer


6. Test case: Pass 'None' to func
>>> print_square(None)
Traceback (most recent call last):
  ...
TypeError: size must be an integer


7. Test case: Pass More than one arg to func
>>> print_square(2, 3)
Traceback (most recent call last):
  ...
TypeError: print_square() takes 1 positional argument but 2 were given


8. Test case: pass str to func
>>> print_square("5")
Traceback (most recent call last):
 ...
TypeError: size must be an integer

9. Test case: Pass nothing
>>> print_square()
Traceback (most recent call last):
 ...
TypeError: print_square() missing 1 required positional argument: 'size'
